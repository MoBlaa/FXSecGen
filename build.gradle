buildscript {
    ext.kotlin_version = '1.2.31'
    ext {
        // Dependencies
        zxing_version = "3.3.2"
        jetbrains_annotations_version = "16.0.1"
        jbcrypt_version = "0.4"
        bc_version = "1.59"
        gson_version = "2.8.2"
        kotlin_version = '1.2.31'
        junit_version = '5.1.0'

        // Plugins
        shadow_version = '2.0.3'
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.10
targetCompatibility = 1.10

mainClassName = "org.myshelf.fxencoder.Main"

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/java", "src/main/resources"]
            includes = ["**/*.fxml"]
        }
    }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Encryptions
    compile "org.mindrot:jbcrypt:$jbcrypt_version"
    compile "org.bouncycastle:bcprov-jdk15on:$bc_version"

    // Serialization
    compile "com.google.code.gson:gson:$gson_version"

    // For Java Null-safety
    compile "org.jetbrains:annotations:$jetbrains_annotations_version"

    // For java boilerplate enhancement; lombok is not supporting java 10 yet
    //provided "org.projectlombok:lombok:$lombok_version"

    // For QR-Code generation
    compile "com.google.zxing:core:$zxing_version"
    compile "com.google.zxing:javase:$zxing_version"

    // Testing
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junit_version"
    )
    testRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    )
}

shadowJar {
    dependencies {
        exclude(dependency("org.bouncycastle:bcprov-jdk15on:$bc_version"))
    }
}

test {
    useJUnitPlatform()
}

compileKotlin.destinationDir = compileJava.destinationDir

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}